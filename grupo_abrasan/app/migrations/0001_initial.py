# Generated by Django 4.0.5 on 2022-07-06 04:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bodega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=600)),
                ('encargado', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='BodegaProductos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=0, null=True)),
                ('minimo', models.IntegerField(default=0, null=True)),
                ('bodega', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.bodega')),
            ],
        ),
        migrations.CreateModel(
            name='Obra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=300)),
                ('ubicacion', models.CharField(max_length=300)),
                ('total_villas', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('clave', models.CharField(max_length=30, unique=True)),
                ('ubicacion', models.CharField(max_length=200)),
                ('categoria', models.CharField(choices=[('1', 'EQUIPO'), ('2', 'MUEBLE'), ('3', 'ACCESORIO'), ('4', 'HERRERIA'), ('5', 'CANCELERIA'), ('6', 'CARPINTERIA'), ('7', 'ACABADO'), ('8', 'MATERIAL')], max_length=80)),
                ('descripcion', models.CharField(max_length=200)),
                ('proveedor', models.CharField(max_length=500)),
                ('unidad', models.CharField(choices=[('1', 'PIEZA'), ('2', 'CUBETA'), ('3', 'GALON'), ('4', 'BULTO'), ('5', 'm3'), ('6', 'KG'), ('7', 'TONELADA'), ('8', 'MILLA'), ('9', 'LITRO'), ('10', 'JUEGO'), ('11', 'LOTE'), ('12', 'm2')], max_length=50)),
                ('disp', models.IntegerField(default=0, null=True)),
                ('minimo', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Villa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.CharField(max_length=20)),
                ('obra', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app.obra')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solicitud', models.CharField(max_length=300)),
                ('fecha', models.DateField(verbose_name='fecha_solicitud_requisicion')),
                ('solicita', models.CharField(max_length=300)),
                ('descripcion', models.CharField(default='', max_length=300)),
                ('cantidad', models.IntegerField(default=0, null=True)),
                ('bodegaproducto', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app.bodegaproductos')),
                ('obra', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app.obra')),
            ],
        ),
        migrations.CreateModel(
            name='Recepcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('llegada', models.IntegerField(default=0, null=True)),
                ('pendiente', models.IntegerField(default=0, null=True)),
                ('utilizado', models.IntegerField(default=0, null=True)),
                ('saldo', models.IntegerField(default=0, null=True)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.solicitud')),
            ],
        ),
        migrations.CreateModel(
            name='Insumos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='fecha_explosion_insumo')),
                ('cantidad', models.IntegerField(default=0, null=True)),
                ('bodegaproducto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.bodegaproductos')),
                ('obra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.obra')),
                ('villa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.villa')),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compra', models.IntegerField(default=0, null=True)),
                ('solicitud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.solicitud')),
            ],
        ),
        migrations.AddField(
            model_name='bodegaproductos',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.producto'),
        ),
        migrations.AddField(
            model_name='bodega',
            name='obra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.obra'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Admin'), (2, 'Bodeguero'), (3, 'Residente de Obra')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
